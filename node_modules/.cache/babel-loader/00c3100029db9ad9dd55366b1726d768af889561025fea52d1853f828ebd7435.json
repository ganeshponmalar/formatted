{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderForm() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [formattedData, setFormattedData] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const [key, concordinateValue] = inputValue.split(' ');\n    try {\n      const response = await axios.get('http://localhost:8000/formats');\n      console.log(response);\n      const concordance = response.data.find(json => Object.keys(json.query.query_string.query).some(queryKey => queryKey.toLowerCase() === key.toLowerCase()));\n      if (concordance) {\n        const formattedJson = {\n          query: {\n            query_string: {\n              query: `${concordance.query.query_string.query[key.toLowerCase()] || concordance.query.query_string.query[key.toUpperCase()]}:${concordinateValue}`\n            }\n          }\n        };\n        setFormattedData(JSON.stringify(formattedJson, null, 2));\n        setErrorMessage('');\n        setInputValue('');\n      } else {\n        setFormattedData(null);\n        setErrorMessage('Key not found');\n      }\n    } catch (error) {\n      setFormattedData(null);\n      setErrorMessage('Error retrieving data');\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleCopyToClipboard = () => {\n    setCopied(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key and Concordant Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }, this), formattedData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formattedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }, this), formattedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: formattedData,\n        onCopy: handleCopyToClipboard,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"board\",\n          children: \"Copy to Clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 8\n      }, this), copied && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Copied to clipboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderForm, \"Im8OBVbe6LQnbdKCuY9ZBrHai9k=\");\n_c = OrderForm;\n;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","axios","CopyToClipboard","jsxDEV","_jsxDEV","OrderForm","_s","inputValue","setInputValue","errorMessage","setErrorMessage","formattedData","setFormattedData","copied","setCopied","handleSubmit","e","preventDefault","key","concordinateValue","split","response","get","console","log","concordance","data","find","json","Object","keys","query","query_string","some","queryKey","toLowerCase","formattedJson","toUpperCase","JSON","stringify","error","handleInputChange","target","value","handleCopyToClipboard","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","text","onCopy","className","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\nexport default function OrderForm() {\n\n \n  const [inputValue, setInputValue] = useState('');\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const [formattedData, setFormattedData] = useState(null);\n\n  const [copied,setCopied] = useState(false);\n\n  const handleSubmit = async (e) => {\n\n    e.preventDefault();\n\n    const [key, concordinateValue] = inputValue.split(' ');\n\n  \n    try {\n\n      const response = await axios.get('http://localhost:8000/formats');\n\n      console.log(response)\n\n      const concordance = response.data.find((json) =>\n\n      Object.keys(json.query.query_string.query).some((queryKey) => queryKey.toLowerCase() === key.toLowerCase())\n\n      );\n\n      if (concordance) {\n\n        const formattedJson = {\n\n          query: {\n\n            query_string: {\n\n             query:`${concordance.query.query_string.query[key.toLowerCase()] || concordance.query.query_string.query[key.toUpperCase()]}:${concordinateValue}`,\n\n            },\n          },\n        };\n        \n        setFormattedData(JSON.stringify(formattedJson, null, 2)); \n\n        setErrorMessage('');\n\n        setInputValue('');\n\n\n      } else {\n\n        setFormattedData(null);\n\n        setErrorMessage('Key not found');\n\n      }\n\n    } catch (error) {\n\n      setFormattedData(null);\n\n      setErrorMessage('Error retrieving data');\n      \n    }\n  };\n\n  const handleInputChange = (e) => {\n\n    setInputValue(e.target.value);\n\n  };\n\n\n  const handleCopyToClipboard = () => {\n\n    setCopied(true);\n\n  };\n\n  return (\n\n    <div>\n      \n      <form onSubmit={handleSubmit}>\n\n        <label>\n          Key and Concordant Value:\n\n          <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n          \n        </label>\n        <button type=\"submit\">Get Value</button>\n\n      </form>\n\n      {errorMessage && <p>{errorMessage}</p>}\n\n      {formattedData && <pre>{formattedData}</pre>}\n\n      {formattedData && (\n\n        <div>\n       {/* <pre>{formattedData}</pre> */}\n\n       <CopyToClipboard text={formattedData} onCopy={handleCopyToClipboard}>\n\n       <button className='board'>Copy to Clipboard</button>\n\n       </CopyToClipboard>\n\n       {copied && <span>Copied to clipboard!</span>}\n\n        </div>\n      )}\n\n    </div>\n  );\n};\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}