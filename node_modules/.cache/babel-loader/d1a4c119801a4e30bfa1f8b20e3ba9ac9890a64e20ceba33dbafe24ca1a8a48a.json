{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Format() {\n  _s();\n  const [key, setKey] = useState('');\n  const [data, setData] = useState(null);\n  const [con, setCon] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFetchData = () => {\n    setLoading(true);\n    axios.get(`http://localhost:9000/aliens/search?q=${query}`).then(response => {\n      if (response.status === 200) {\n        const formattedData = response.data;\n        console.log(formattedData);\n        formattedData.query.forEach(queryItem => {\n          if (queryItem.query_string && queryItem.query_string.key) {\n            queryItem.query_string.key += ` ${con}`; // Update the key field with the value of 'con'\n          }\n        });\n\n        setData(formattedData);\n      } else {\n        alert('An error occurred');\n      }\n    }).catch(error => {\n      console.log('Error', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"key\",\n      children: \"Key:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"String\",\n      value: key,\n      onChange: e => setKey(e.target.value),\n      placeholder: \"Enter key\",\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"String\",\n      value: con,\n      onChange: e => setCon(e.target.value),\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleFetchData,\n      children: \"JSON Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"json-format\",\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Format, \"kpbKNjYm9GF5LTYHqwC1PQ9ffBM=\");\n_c = Format;\nvar _c;\n$RefreshReg$(_c, \"Format\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Format","_s","key","setKey","data","setData","con","setCon","loading","setLoading","handleFetchData","get","query","then","response","status","formattedData","console","log","forEach","queryItem","query_string","alert","catch","error","finally","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Format() {\n  const [key, setKey] = useState('');\n  const [data, setData] = useState(null);\n  const [con, setCon] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleFetchData = () => {\n    setLoading(true);\n\n    axios\n      .get(`http://localhost:9000/aliens/search?q=${query}`)\n      .then((response) => {\n        if (response.status === 200) {\n          const formattedData = response.data;\n          console.log(formattedData);\n\n          formattedData.query.forEach((queryItem) => {\n            if (queryItem.query_string && queryItem.query_string.key) {\n              queryItem.query_string.key += ` ${con}`; // Update the key field with the value of 'con'\n            }\n          });\n\n          setData(formattedData);\n        } else {\n          alert('An error occurred');\n        }\n      })\n      .catch((error) => {\n        console.log('Error', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <label className=\"label\" htmlFor=\"key\">\n        Key:\n      </label>\n      <textarea\n        type=\"String\"\n        value={key}\n        onChange={(e) => setKey(e.target.value)}\n        placeholder=\"Enter key\"\n        className=\"text-input\"\n      />\n      <textarea\n        type=\"String\"\n        value={con}\n        onChange={(e) => setCon(e.target.value)}\n        className=\"text-input\"\n      />\n      <button className=\"btn\" onClick={handleFetchData}>\n        JSON Format\n      </button>\n\n      {loading && <p>Loading...</p>}\n\n      {data && (\n        <div className=\"details\">\n          <pre className=\"json-format\">{JSON.stringify(data, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}