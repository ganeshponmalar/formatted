{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderForm() {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const handleFetchData = async () => {\n    setLoading(true);\n    try {\n      const query = searchInput.split(' ')[0];\n      const concordinateValue = searchInput.substring(query.length).trim(); // Extract the concordinate value\n\n      const response = await axios.get(`http://localhost:2000/formats/query?q=${query}`);\n      const responseFormatted = response.data.map(item => {\n        const concordinate = item.query[0].query_string.query + ' ' + concordinateValue;\n        return {\n          ...item,\n          query: [{\n            ...item.query[0],\n            query_string: {\n              query: concordinate\n            }\n          }]\n        };\n      });\n      setData(responseFormatted);\n    } catch (error) {\n      console.log(error, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: searchInput,\n      onChange: e => setSearchInput(e.target.value),\n      placeholder: \"Search the key and concordinate value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), Array.isArray(data) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(item, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderForm, \"ib5YoI0fU2kFfN+BnEdK7wWtAk8=\");\n_c = OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OrderForm","_s","searchInput","setSearchInput","loading","setLoading","data","setData","handleFetchData","query","split","concordinateValue","substring","length","trim","response","get","responseFormatted","map","item","concordinate","query_string","error","console","log","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","JSON","stringify","id","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n\nexport default function OrderForm() {\n\n  const [searchInput, setSearchInput] = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  const [data, setData] = useState([]);\n\n\n  const handleFetchData = async () => {\n\n    setLoading(true);\n\n    try {\n\n      const query = searchInput.split(' ')[0]; \n\n      const concordinateValue = searchInput.substring(query.length).trim(); // Extract the concordinate value\n\n      const response = await axios.get(`http://localhost:2000/formats/query?q=${query}`);\n\n      const responseFormatted = response.data.map((item) => {\n\n      const concordinate = item.query[0].query_string.query + ' ' + concordinateValue;\n\n        return {\n\n          ...item,\n\n          query: [\n\n            {\n              ...item.query[0],\n\n              query_string: {\n\n                query: concordinate,\n\n              },\n\n            },\n          ],\n        };\n      });\n\n      setData(responseFormatted);\n\n    } catch (error) {\n      console.log(error, 'error');\n      \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n\n    <div>\n      <textarea\n\n        value={searchInput}\n\n        onChange={(e) => setSearchInput(e.target.value)}\n\n        placeholder=\"Search the key and concordinate value\"\n      />\n\n      <button onClick={handleFetchData}>Search</button>\n\n      {loading && <p>Loading...</p>}\n\n      {Array.isArray(data) && (\n\n        <div>\n\n          {data.map((item) => (\n\n            <div key={item.id}>\n\n              <pre>{JSON.stringify(item, null, 2)}</pre>\n              \n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}