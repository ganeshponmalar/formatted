{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Beautify() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [formattedJson, setFormattedJson] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = event => {\n    setFormattedJson(event.target.value);\n  };\n  const BeautifyJson = () => {\n    try {\n      const parseJson = JSON.parse(userInput);\n      const BeautifyJson = JSON.stringify(parseJson, null, 2);\n      setFormattedJson(BeautifyJson);\n      setErrorMessage('');\n    } catch (error) {\n      setFormattedJson('');\n      setErrorMessage('Invalid JSON format');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beautify Json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userInput,\n      placeholder: \"Enter Formatted Json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: BeautifyJson,\n      children: \"Beautify Json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this), formattedJson && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formattedJson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Beautify, \"1U0LkFHi/CBSyxPbrnj9wAFmGuk=\");\n_c = Beautify;\nvar _c;\n$RefreshReg$(_c, \"Beautify\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Beautify","_s","userInput","setUserInput","formattedJson","setFormattedJson","errorMessage","setErrorMessage","handleInputChange","event","target","value","BeautifyJson","parseJson","JSON","parse","stringify","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nexport default function Beautify() {\n\n    const [userInput, setUserInput] = useState('')\n\n    const [formattedJson, setFormattedJson] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleInputChange = (event) => {\n\n        setFormattedJson(event.target.value)\n\n    }\n\n    const BeautifyJson = () => {\n\n        try {\n            const parseJson = JSON.parse(userInput)\n            const BeautifyJson = JSON.stringify(parseJson, null, 2)\n\n            setFormattedJson(BeautifyJson)\n\n            setErrorMessage('')\n\n\n        } catch (error) {\n\n            setFormattedJson('');\n\n            setErrorMessage('Invalid JSON format');\n\n        }\n\n    }\n\n    return (\n\n        <div>\n            <h1>Beautify Json</h1>\n            <textarea\n                value={userInput}\n                placeholder=\"Enter Formatted Json\"\n            />\n            <button onClick={BeautifyJson}>Beautify Json</button>\n\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n            {formattedJson && (\n\n                <pre>{formattedJson}</pre>\n\n            )}\n\n            {errorMessage && <p></p>}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,iBAAiB,GAAIC,KAAK,IAAK;IAEjCJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAExC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAEvB,IAAI;MACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACb,SAAS,CAAC;MACvC,MAAMU,YAAY,GAAGE,IAAI,CAACE,SAAS,CAACH,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;MAEvDR,gBAAgB,CAACO,YAAY,CAAC;MAE9BL,eAAe,CAAC,EAAE,CAAC;IAGvB,CAAC,CAAC,OAAOU,KAAK,EAAE;MAEZZ,gBAAgB,CAAC,EAAE,CAAC;MAEpBE,eAAe,CAAC,qBAAqB,CAAC;IAE1C;EAEJ,CAAC;EAED,oBAEIR,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBvB,OAAA;MACIY,KAAK,EAAET,SAAU;MACjBqB,WAAW,EAAC;IAAsB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACFvB,OAAA;MAAQyB,OAAO,EAAEZ,YAAa;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAEpDhB,YAAY,iBAAIP,OAAA;MAAG0B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAEZ;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAE9DlB,aAAa,iBAEVL,OAAA;MAAAmB,QAAA,EAAMd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtB,EAEAhB,YAAY,iBAAIP,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAEd;AAACrB,EAAA,CAxDuBD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}