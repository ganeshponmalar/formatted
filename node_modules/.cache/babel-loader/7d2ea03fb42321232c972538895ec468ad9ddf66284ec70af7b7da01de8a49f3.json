{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Beautify = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [formattedJson, setFormattedJson] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const beautifyJson = () => {\n    try {\n      const parsedJson = JSON.parse(userInput);\n      const beautifiedJson = JSON.stringify(parsedJson, null, 2);\n      setFormattedJson(beautifiedJson);\n      setErrorMessage('');\n    } catch (error) {\n      setFormattedJson('');\n      setErrorMessage('Invalid JSON format');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beautify JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userInput,\n      onChange: handleInputChange,\n      placeholder: \"Enter your JSON here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: beautifyJson,\n      children: \"Beautify JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this), formattedJson && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formattedJson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Beautify, \"1U0LkFHi/CBSyxPbrnj9wAFmGuk=\");\n_c = Beautify;\nexport default Beautify;\nvar _c;\n$RefreshReg$(_c, \"Beautify\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Beautify","_s","userInput","setUserInput","formattedJson","setFormattedJson","errorMessage","setErrorMessage","handleInputChange","event","target","value","beautifyJson","parsedJson","JSON","parse","beautifiedJson","stringify","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nconst Beautify = () => {\n  const [userInput, setUserInput] = useState('');\n\n  const [formattedJson, setFormattedJson] = useState('');\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (event) => {\n\n    setUserInput(event.target.value);\n\n  };\n\n  const beautifyJson = () => {\n\n    try {\n        \n      const parsedJson = JSON.parse(userInput);\n      const beautifiedJson = JSON.stringify(parsedJson, null, 2);\n      setFormattedJson(beautifiedJson);\n      setErrorMessage('');\n    } catch (error) {\n      setFormattedJson('');\n      setErrorMessage('Invalid JSON format');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Beautify JSON</h1>\n      <textarea\n        value={userInput}\n        onChange={handleInputChange}\n        placeholder=\"Enter your JSON here...\"\n      />\n      <button onClick={beautifyJson}>Beautify JSON</button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n      {formattedJson && <pre>{formattedJson}</pre>}\n    </div>\n  );\n};\n\nexport default Beautify;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,iBAAiB,GAAIC,KAAK,IAAK;IAEnCN,YAAY,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAElC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAEzB,IAAI;MAEF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACb,SAAS,CAAC;MACxC,MAAMc,cAAc,GAAGF,IAAI,CAACG,SAAS,CAACJ,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;MAC1DR,gBAAgB,CAACW,cAAc,CAAC;MAChCT,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdb,gBAAgB,CAAC,EAAE,CAAC;MACpBE,eAAe,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC;EAED,oBACER,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBxB,OAAA;MACEY,KAAK,EAAET,SAAU;MACjBsB,QAAQ,EAAEhB,iBAAkB;MAC5BiB,WAAW,EAAC;IAAyB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,eACFxB,OAAA;MAAQ2B,OAAO,EAAEd,YAAa;MAAAO,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACpDjB,YAAY,iBAAIP,OAAA;MAAG4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAC9DnB,aAAa,iBAAIL,OAAA;MAAAoB,QAAA,EAAMf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV,CAAC;AAACtB,EAAA,CAxCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}