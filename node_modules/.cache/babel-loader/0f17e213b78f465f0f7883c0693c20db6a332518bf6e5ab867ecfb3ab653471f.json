{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/addingJson.js\",\n  _s = $RefreshSig$();\nimport Display from './displayData';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddJson() {\n  _s();\n  const [key, setKey] = useState('');\n  const [value, setValue] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = {\n        query: {\n          query_string: {\n            query: {\n              [key]: value\n            }\n          }\n        }\n      };\n      const response = await axios.post('http://localhost:8000/formats/save', data);\n      setShowSuccessMessage(true);\n      console.log(response.data);\n      setKey('');\n      setValue('');\n    } catch (error) {\n      console.log(error, 'Error');\n    }\n    setTimeout(() => {\n      setShowSuccessMessage(false);\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [showSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"Data added successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"KEY\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"string\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"VALUE\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"string\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GetData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s(AddJson, \"KpZpBf8cmpn5NfVrKA2tU+Q0/qQ=\");\n_c = AddJson;\n;\nvar _c;\n$RefreshReg$(_c, \"AddJson\");","map":{"version":3,"names":["Display","React","useState","axios","jsxDEV","_jsxDEV","AddJson","_s","key","setKey","value","setValue","showSuccessMessage","setShowSuccessMessage","handleSubmit","e","preventDefault","data","query","query_string","response","post","console","log","error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","GetData","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/addingJson.js"],"sourcesContent":["import Display from './displayData';\n\nimport React, { useState } from 'react';\n\nimport axios from 'axios';\n\n\n\nexport default function AddJson() {\n\n\n    const [key, setKey] = useState('');\n\n    const [value, setValue] = useState('');\n  \n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  \n    const handleSubmit = async (e) => {\n  \n      e.preventDefault();\n  \n      try {\n        \n        const data = {\n  \n          query: {\n  \n            query_string: {\n  \n              query: {\n  \n                [key]: value,\n              },\n            }\n          }\n        };\n  \n        const response = await axios.post('http://localhost:8000/formats/save', data);\n  \n        setShowSuccessMessage(true);\n  \n        console.log(response.data);\n  \n        setKey('')\n  \n        setValue('')\n  \n      } catch (error) {\n  \n        console.log(error, 'Error');\n  \n      }\n  \n      setTimeout(() => {\n  \n        setShowSuccessMessage(false);\n  \n      }, 3000);\n  \n    };\n  \n    return (\n  \n      <div className='content'>\n  \n        {showSuccessMessage && <p className='success-message'>Data added successfully!</p>}\n  \n        <form onSubmit={handleSubmit}>\n  \n          <label>\n  \n            KEY\n            <textarea\n              type=\"string\"\n              value={key}\n              onChange={(e) => setKey(e.target.value)}\n            />\n  \n          </label>\n          <label>\n            VALUE\n            <textarea\n              type=\"string\"\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n            />\n  \n          </label>\n          <br />\n  \n          <button className='btn' type=\"submit\">Submit</button>\n  \n        </form>\n        <GetData />\n      </div>\n    );\n  };\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}