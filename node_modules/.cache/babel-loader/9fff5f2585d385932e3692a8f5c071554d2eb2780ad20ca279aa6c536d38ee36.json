{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderForm() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [content, setContent] = useState('');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFetchData = () => {\n    setLoading(true);\n    axios.get(`http://localhost:9000/aliens/search?q=${query}& + \"content=${content}`).then(response => {\n      if (response.status === 200) {\n        const formattedData = response.data;\n        setData(formattedData);\n      } else {\n        alert('An error occurred');\n      }\n    }).catch(error => {\n      console.log('Error', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"query\",\n      children: \"Query:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter query\",\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: \"content\",\n      children: \"Additional Content:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"Enter additional content\",\n      className: \"text-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleFetchData,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"json-format\",\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderForm, \"DiJTrbmbPMWeenlt+Ml/d4IyzZ8=\");\n_c = OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OrderForm","_s","query","setQuery","content","setContent","data","setData","loading","setLoading","handleFetchData","get","then","response","status","formattedData","alert","catch","error","console","log","finally","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/Order.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function OrderForm() {\n  const [query, setQuery] = useState('');\n  const [content, setContent] = useState('');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFetchData = () => {\n    setLoading(true);\n\n    axios\n      .get(`http://localhost:9000/aliens/search?q=${query}& + \"content=${content}`)\n      .then((response) => {\n        if (response.status === 200) {\n          const formattedData = response.data;\n          setData(formattedData);\n        } else {\n          alert('An error occurred');\n        }\n      })\n      .catch((error) => {\n        console.log('Error', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <label className=\"label\" htmlFor=\"query\">\n        Query:\n      </label>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Enter query\"\n        className=\"text-input\"\n      />\n\n      <label className=\"label\" htmlFor=\"content\">\n        Additional Content:\n      </label>\n      <input\n        type=\"text\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        placeholder=\"Enter additional content\"\n        className=\"text-input\"\n      />\n\n      <button className=\"btn\" onClick={handleFetchData}>\n        Search\n      </button>\n\n      {loading && <p>Loading...</p>}\n\n      {data && (\n        <div className=\"details\">\n          <pre className=\"json-format\">{JSON.stringify(data, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}