{"ast":null,"code":"var _jsxFileName = \"/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Beautify() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [formattedJson, setFormattedJson] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = event => {\n    setFormattedJson(event.target.value);\n  };\n  const BeautifyJson = () => {\n    try {\n      const parseJson = JSON.parse(userInput);\n      const BeautifyJson = JSON.stringify(parseJson, null, 2);\n      setFormattedJson(BeautifyJson);\n      set;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Beautify, \"dB1uH/nTOIEQF+xCin5cqll5dXc=\");\n_c = Beautify;\nvar _c;\n$RefreshReg$(_c, \"Beautify\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Beautify","_s","userInput","setUserInput","formattedJson","setFormattedJson","errorMessage","setErrorMessage","handleInputChange","event","target","value","BeautifyJson","parseJson","JSON","parse","stringify","set","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ganesan/Desktop/chatgpt-app/frontend/src/components/BeautyJson.js"],"sourcesContent":["import React from 'react'\nimport {useState} from 'react';\n\nexport default function Beautify(){\n\nconst [userInput,setUserInput] = useState('')\n\nconst [formattedJson,setFormattedJson] = useState('');\n\nconst [errorMessage,setErrorMessage] = useState('')\n\nconst handleInputChange = (event)=>{\n\n    setFormattedJson(event.target.value)\n\n}\n\nconst BeautifyJson = ()=>{\n    try{\n        const parseJson = JSON.parse(userInput)\n        const BeautifyJson = JSON.stringify(parseJson ,null,2)\n\n        setFormattedJson(BeautifyJson)\n        set\n\n\n    }catch(error){\n        console.log(error)\n\n    }\n\n}\n    \n    return(\n\n        <div>\n            \n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAElC,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAM,CAACO,aAAa,EAACC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAErD,MAAM,CAACS,YAAY,EAACC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEnD,MAAMW,iBAAiB,GAAIC,KAAK,IAAG;IAE/BJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAExC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAI;IACrB,IAAG;MACC,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACb,SAAS,CAAC;MACvC,MAAMU,YAAY,GAAGE,IAAI,CAACE,SAAS,CAACH,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;MAEtDR,gBAAgB,CAACO,YAAY,CAAC;MAC9BK,GAAG;IAGP,CAAC,QAAMC,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAEtB;EAEJ,CAAC;EAEG,oBAEInB,OAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEd;AAACvB,EAAA,CApCuBD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}